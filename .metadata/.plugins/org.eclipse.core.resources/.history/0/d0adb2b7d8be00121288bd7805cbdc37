package streams

object Vectors {
  val level = Vector(Vector('o', 'o', 'o'), Vector('o', 'o', 'o'), Vector('o', 'c', 'o'))
  val row = level.indexWhere(v => v.contains('c'))

  val res = level filter (_ contains 'c')
  
  case class Pos(val r:Int, val c:Int) {
  	override def toString = "("+r+","+"c"+")"
  }
  def findChar(c: Char, levelVector: Vector[Vector[Char]]): Pos = {
    val row = levelVector.indexWhere(v => v.contains('c'))
    val col = levelVector(row).indexOf('c')
    Pos(row, col)
  }
  
  val res = findChar('c',level)
  

}